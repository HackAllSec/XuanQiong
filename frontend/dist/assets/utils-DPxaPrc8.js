import{y as c}from"./index-JDjDOS_H.js";class n extends Error{}n.prototype.name="InvalidTokenError";function i(r){return decodeURIComponent(atob(r).replace(/(.)/g,(e,t)=>{let o=t.charCodeAt(0).toString(16).toUpperCase();return o.length<2&&(o="0"+o),"%"+o}))}function d(r){let e=r.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return i(e)}catch{return atob(e)}}function l(r,e){if(typeof r!="string")throw new n("Invalid token specified: must be a string");e||(e={});const t=e.header===!0?0:1,o=r.split(".")[t];if(typeof o!="string")throw new n(`Invalid token specified: missing part #${t+1}`);let a;try{a=d(o)}catch(s){throw new n(`Invalid token specified: invalid base64 for part #${t+1} (${s.message})`)}try{return JSON.parse(a)}catch(s){throw new n(`Invalid token specified: invalid json for part #${t+1} (${s.message})`)}}function m(r){const e=new Date(r),t=e.getFullYear(),o=(e.getMonth()+1).toString().padStart(2,"0"),a=e.getDate().toString().padStart(2,"0");return`${t}-${o}-${a}`}function u(){const r=c(),e=sessionStorage.getItem("token");if(e)try{const t=l(e);if(Math.floor(Date.now()/1e3)>t.exp){sessionStorage.removeItem("token"),sessionStorage.removeItem("username"),sessionStorage.removeItem("avatar"),location.reload();return}}catch(t){console.log(t),sessionStorage.removeItem("token"),sessionStorage.removeItem("username"),sessionStorage.removeItem("avatar"),location.reload();return}else r.push("/login")}export{u as c,m as f};
