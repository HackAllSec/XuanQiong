name: SLSA Go Releaser

on:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  id-token: write
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows, linux, darwin]
        goarch: [amd64, 386, arm64, arm]
        exclude:
          - goos: darwin
            goarch: 386
          - goos: darwin
            goarch: arm
          - goos: windows
            goarch: arm

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go 1.20
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'
        check-latest: true

    - name: Build
      run: |
        echo "Building for ${{ matrix.goos }}-${{ matrix.goarch }}"
        cd backend
        if [ "${{ matrix.goos }}" = "windows" ]; then
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 go build -v -o xuanqiong-${{ matrix.goos }}-${{ matrix.goarch }}.exe
        else
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 go build -v -o xuanqiong-${{ matrix.goos }}-${{ matrix.goarch }}
        fi

    - name: Calculate Hash
      id: hash
      run: |
        echo "Calculating hash for ${{ matrix.goos }}-${{ matrix.goarch }}"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          HASH=$(sha256sum backend/xuanqiong-${{ matrix.goos }}-${{ matrix.goarch }}.exe | awk '{ print $1 }')
        else
          HASH=$(sha256sum backend/xuanqiong-${{ matrix.goos }}-${{ matrix.goarch }} | awk '{ print $1 }')
        fi
        echo "hash_${{ matrix.goos }}_${{ matrix.goarch }}=${HASH}" >> ${GITHUB_OUTPUT}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: xuanqiong-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./backend/xuanqiong-${{ matrix.goos }}-${{ matrix.goarch }}(.exe)
